{"version":3,"sources":["./src/app/_interfaces/obtainedState.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_components/collectibles/collectible-filter/collectible-filter.component.ts","./src/app/_components/collectibles/collectible-filter/collectible-filter.component.html","./src/app/_components/wish-list/item-cost-card/item-cost-card.component.html","./src/app/_components/wish-list/item-cost-card/item-cost-card.component.ts","./src/app/_services/blueprint.service.ts","./src/app/_components/login/login.component.ts","./src/app/_components/login/login.component.html","./src/app/_components/login/index.ts","./src/app/_components/collectibles/collectible-sort/collectible-sort.component.html","./src/app/_components/collectibles/collectible-sort/collectible-sort.component.ts","./src/app/_components/collectibles/collectibles.component.ts","./src/app/_components/collectibles/collectibles.component.html","./src/environments/environment.ts","./src/app/_services/index.ts","./src/app/_components/index.ts","./src/app/message.service.ts","./src/app/_interfaces/collectibleCategories.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_components/wish-list/wish-list-card/wish-list-card.component.html","./src/app/_components/wish-list/wish-list-card/wish-list-card.component.ts","./src/app/_components/collectibles/collectibleFilter.ts","./src/app/app.module.ts","./src/app/_components/messages/messages.component.html","./src/app/_components/messages/messages.component.ts","./src/app/_interfaces/collectible.ts","./src/app/_components/collectibles/collectibleSorter.ts","./src/app/_services/collectible.service.ts","./src/app/register/index.ts","./src/app/_components/collectibles/collectible-card/collectible-card.component.ts","./src/app/_components/collectibles/collectible-card/collectible-card.component.html","./src/app/_services/authentication.service.ts","./src/app/_components/wish-list/wish-list.component.html","./src/app/_components/wish-list/wish-list.component.ts","./src/app/_interfaces/index.ts","./src/app/app-routing.module.ts","./src/app/_components/details/details.component.html","./src/app/_components/details/details.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export const obtainedState = {\r\n   Any: \"All\",\r\n   NotObtained: \"Not Obtained\",\r\n   Obtained: \"Obtained\",\r\n   Mastered: \"Mastered\"\r\n};","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { AuthenticationService } from '../_services';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n\nexport class RegisterComponent implements OnInit {\n  public registerForm!: FormGroup;\n  public loading = false;\n  public submitted = false; \n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private authentication: AuthenticationService\n  ) { }\n  \n  public get formFields(): { [key: string]: AbstractControl} { \n    return this.registerForm.controls \n  };\n\n  public onSubmit() : void {\n    this.submitted = true;\n    if (this.registerForm.invalid) {\n      console.log(\"Register form invalid\");\n      return;\n    }\n    this.loading = true;\n    this.authentication.register(\n      this.formFields.username.value,\n      this.formFields.password.value)\n      .subscribe(registerData => console.log(registerData));\n    console.log(\"Register form submitted\");\n  }\n  \n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n}\n","<h2>Register</h2>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formFields.firstName.errors }\" />\n        <div *ngIf=\"submitted && formFields.firstName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"formFields.firstName.errors.required\">First Name is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formFields.lastName.errors }\" />\n        <div *ngIf=\"submitted && formFields.lastName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"formFields.lastName.errors.required\">Last Name is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formFields.username.errors }\" />\n        <div *ngIf=\"submitted && formFields.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"formFields.username.errors.required\">Username is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formFields.password.errors }\" />\n        <div *ngIf=\"submitted && formFields.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"formFields.password.errors.required\">Password is required</div>\n            <div *ngIf=\"formFields.password.errors.minlength\">Password must be at least 6 characters</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Register\n        </button>\n        <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>","import { Component, Input, OnInit } from '@angular/core';\nimport { Action } from '../../../_tools';\nimport { collectibleCategories, obtainedState } from '../../../_interfaces';\nimport { CollectibleFilter, CollectibleFilterState } from '../collectibleFilter';\nimport { DisplayedCategories } from '../displayedCategories';\n\n@Component({\n  selector: 'app-collectible-filter',\n  templateUrl: './collectible-filter.component.html',\n  styleUrls: ['./collectible-filter.component.scss']\n})\nexport class CollectibleFilterComponent implements OnInit {\n  @Input() public filter!: CollectibleFilter;\n  public categories = collectibleCategories;\n  public obtainedStates = obtainedState;\n\n  private _filterState: CollectibleFilterState = {\n    filterText: \"\",\n    allowedObtainedState: obtainedState.NotObtained,\n    includedCategories: {}\n  };\n\n  constructor() { }\n\n  public ngOnInit(): void {\n    this.initialiseShownCategories();\n  }\n\n  private update():void {\n    this.filter.filter = this._filterState;\n  }\n\n  public toggleShowCategory(categoryName: string): void {\n    let shownCategories = this._filterState.includedCategories;\n    shownCategories[categoryName] = !shownCategories[categoryName];\n    this.update();\n  }\n\n  public setFilterText(value: string): void {\n    this._filterState.filterText = value;\n    this.update();\n  }\n\n  private initialiseShownCategories() {\n    for (let key in collectibleCategories) {\n      let category = collectibleCategories[key]\n      this._filterState.includedCategories[category] = true;\n    }\n    this.update();\n  }\n\n  public setObtainedFilterToAny(): void {\n    this._filterState.allowedObtainedState = obtainedState.Any;\n  }\n\n  public setObtainedFilterToNonObtained(): void {\n    this._filterState.allowedObtainedState = obtainedState.NotObtained;\n  }\n\n  public setObtainedFilterToObtained(): void {\n    this._filterState.allowedObtainedState = obtainedState.Obtained;\n  }\n\n  public setObtainedFilterToMastered(): void {\n    this._filterState.allowedObtainedState = obtainedState.Mastered;\n  }\n\n  public getCheckedValue(category:string):boolean {\n    return this._filterState.includedCategories[category];\n  }\n\n  public setObtainedFilter(value:string):void {\n    this._filterState.allowedObtainedState = value;\n  }\n\n  public getObtainedFilterValue(rank:string):boolean {\n    return this._filterState.allowedObtainedState === rank;\n  }\n\n  public sortByDefinitionOrder = (a: any, b:any): number => {\n    return 0;\n  }\n}","<div class=\"container\">\n\n  <div class=\"row\">\n    <h5>Search</h5>\n    <div class = \"col-12\">\n      <input class=\"w-100\" #searchBox type=\"text\" (input)=\"setFilterText(searchBox.value)\" />\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <h5>Included categories</h5>\n    \n    <div *ngFor=\"let category of categories | keyvalue\" class=\"col-12 col-sm-6 col-lg-12\">\n      <div class=\"category-toggle-container noselect btn btn-primary\" (click)=\"toggleShowCategory(category.value)\">\n        <div class=\"category-toggle nopointer\">\n          <input type=\"checkbox\" [checked]=\"getCheckedValue(category.value)\">\n          {{category.value}}s\n        </div>\n      </div>\n    </div>\n    \n  </div>\n\n  <div class=\"row\">\n    <h5 class=\"center\">Obtained filter</h5>\n    \n    <div *ngFor=\"let state of obtainedStates | keyvalue: sortByDefinitionOrder\" class=\"col-12 col-sm-6 col-lg-12\">\n      <div class=\"btn btn-primary category-toggle-container\" (click)=\"setObtainedFilter(state.value)\">\n        <div class=\"category-toggle nopointer\">\n          <input type=\"radio\" [checked]=\"getObtainedFilterValue(state.value)\">\n          {{state.value}}\n        </div>\n      </div>\n    </div>\n  \n  </div>\n\n</div>","<div>\r\n   <div class=\"d-flex border-bottom justify-content-between\">\r\n      <div class=\"d-flex\">\r\n         <a routerLink=\"/collectible/{{collectible.category}}/{{collectible.name}}\">\r\n            <div class=\"m-1\">\r\n               <h4>{{collectible.name}}</h4>\r\n            </div>\r\n         </a>\r\n         <div class=\"m-1\">\r\n            <h4>\r\n               Status: {{getStatusText()}}\r\n            </h4>\r\n         </div>\r\n      </div>\r\n      <div class=\"d-flex\">\r\n         <button class=\"btn btn-primary m-1 fs-1\" (click)=\"reduceRank()\">-</button>\r\n         <button class=\"btn btn-primary m-1 fs-1\" (click)=\"increaseRank()\">+</button>\r\n         <button class=\"btn btn-warning m-1 fs-1\" (click)=\"removeFromWishlist()\">X</button>\r\n      </div>\r\n   </div>\r\n   <!--\r\n   <div>\r\n      <h5>Components</h5>\r\n      <span *ngFor='let component of getBlueprintComponents()' class=\"component-box m-1\">\r\n         {{component.name}} ({{component.componentCount}})\r\n      </span>\r\n   </div>\r\n   -->\r\n   <div *ngIf='hasResourceCost()'>\r\n      <h5>Resource costs</h5>\r\n      <div>\r\n         <span *ngFor='let resource of getBlueprintResourceCost()' class=\"component-box m-1\">\r\n            {{resource.name}} ({{resource.amount}})\r\n         </span>\r\n      </div>\r\n   </div>\r\n</div>","import { Component, Input, OnInit, Output } from '@angular/core';\r\nimport { Blueprint, BlueprintCost, BlueprintComponent, ResourceStack } from '../../../_interfaces/blueprint';\r\nimport { Collectible } from '../../../_interfaces';\r\nimport { CollectibleService } from '../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-item-cost-card',\r\n  templateUrl: './item-cost-card.component.html',\r\n  styleUrls: ['./item-cost-card.component.scss']\r\n})\r\nexport class ItemCostCardComponent implements OnInit {\r\n  @Input() public blueprint!: Blueprint;\r\n  @Input() public collectible!: Collectible;\r\n  @Input() public cost!: BlueprintCost;\r\n  @Input() public onDelete!: (name: string)=>void;\r\n\r\n  constructor(private collectibleService: CollectibleService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  getBlueprintComponents(): BlueprintComponent[] {\r\n    if (this.blueprint === undefined) return [];\r\n    let blueprint = this.blueprint;\r\n    return blueprint === undefined ? [] : blueprint.components;\r\n  }\r\n\r\n  getBlueprintResourceCost(): ResourceStack[] {\r\n    if (this.cost === undefined) return [];\r\n    return this.cost.cost;\r\n  }\r\n\r\n  getStatusText(): string {\r\n    const collectible = this.collectible;\r\n    return collectible.mastered ? \"Mastered\" : \r\n      collectible.obtained ? \"Obtained\" : \"Not obtained\";\r\n  }\r\n\r\n  hasResourceCost(): boolean {\r\n    return this.getBlueprintResourceCost().length > 0;\r\n  }\r\n\r\n  public increaseRank(): void {\r\n    if (!this.collectible.obtained) {\r\n      this.collectible.obtained = true;\r\n    } else if (!this.collectible.mastered) {\r\n      this.collectible.mastered = true;\r\n    } else return;\r\n    this.updateCollectible();\r\n  }\r\n\r\n  public reduceRank(): void {\r\n    if (this.collectible.mastered) {\r\n      this.collectible.mastered = false;\r\n    } else if (this.collectible.obtained) {\r\n      this.collectible.obtained = false;\r\n    } else return;\r\n    this.updateCollectible();\r\n  }\r\n\r\n  removeFromWishlist(): void {\r\n    console.log(\"Removing collectible\", this.collectible.name, \" from wishlist\");\r\n    this.collectible.onWishlist = false;\r\n    this.updateCollectible();\r\n    if (this.onDelete !== undefined) this.onDelete(this.collectible.name);\r\n  }\r\n\r\n  private updateCollectible(): void {\r\n    this.collectibleService.updateCollectible(this.collectible)\r\n    .subscribe(()=>{});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { MessageService } from '../message.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface IBlueprintResource {\r\n  resultName: string;\r\n  resultCategory: string;\r\n  componentName: string;\r\n  componentCategory: string;\r\n  componentCount: number;\r\n}\r\n\r\nexport interface IResource {\r\n  id: number;\r\n  name: string;\r\n  amount: number;\r\n}\r\n\r\nexport interface ISource {\r\n  id: number;\r\n  itemName: string;\r\n  itemCategory: string;\r\n  sourceName: string;\r\n  sourceType: string;\r\n  value: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BlueprintService {\r\n  private _apiAddress:string = environment.apiUrl + \"/blueprint\";\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService) { }\r\n\r\n  getSource(itemName: string): Observable<ISource[]> {\r\n    let data =  { name: itemName };\r\n    return this.http.put<ISource[]>(environment.apiUrl + \"/collectible/getsource\", data)\r\n      .pipe(catchError(this.handleError<ISource[]>('getSource')));\r\n  }\r\n    \r\n  getBlueprintsWithResult(resultName: string): Observable<IBlueprintResource[]> {\r\n    let data = {ResultName: resultName};\r\n    return this.http.put<IBlueprintResource[]>(this._apiAddress + \"/components\", data)\r\n      .pipe(catchError(this.handleError<IBlueprintResource[]>('getBlueprintWithResult')));\r\n    // results.subscribe((result => console.log(result)));\r\n  }\r\n\r\n  getTotalResourceCost(resultName: string): Observable<IResource[]> {\r\n    let data = {ResultName: resultName};\r\n    return this.http.put<IResource[]>(this._apiAddress + \"/totalresourcecost\", data)\r\n      .pipe(catchError(this.handleError<IResource[]>('getTotalResourceCost')));\r\n  }\r\n\r\n  getComponents(resultName: string): Observable<IResource[]> {\r\n    let data = {ResultName: resultName};\r\n    return this.http.put<IResource[]>(this._apiAddress + \"/componentcost\", data)\r\n      .pipe(catchError(this.handleError<IResource[]>('getComponents')));\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T): any {\r\n    return (error: any): Observable<T> => {\r\n\r\n      console.error(error); // log to console instead\r\n      this.log(`${operation} failed: ${error.message}`);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  private log(message: string): void {\r\n    this.messageService.add(`FrameService: ${message}`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport {AuthenticationService } from '../../_services';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm!: FormGroup;\n  public submitted = false;\n  public loading = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService\n    ) { }\n\n  public get formFields() : { [key: string]: AbstractControl} {\n    return this.loginForm.controls;\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  public onSubmit() : void {\n    this.submitted = true;\n\n    if (this.loginForm.invalid) return;\n    this.loading = true;\n\n    this.authenticationService.login(\n      this.formFields.username.value, \n      this.formFields.password.value);\n\n    console.log(\"login submitted\");\n  }\n\n}\n","<h2>Login</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formFields.username.errors }\" />\n        <div *ngIf=\"submitted && formFields.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"formFields.username.errors.required\">Username is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formFields.password.errors }\" />\n        <div *ngIf=\"submitted && formFields.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"formFields.password.errors.required\">Password is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Login\n        </button>\n        <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\n    </div>\n</form>","export * from './login.component';","<div class=\"container\">\n  <div class=\"row\">\n    <h5>Sort by...</h5>\n\n    <div *ngFor=\"let method of sortingMethods | keyvalue\" class=\"col-12 col-sm-6 col-lg-12\">\n      <div class=\"btn btn-primary category-toggle-container\" (click)=\"setSortingMethod(method.value)\">\n        <div class=\"category-toggle nopointer\">\n          <input type=\"radio\" [checked]=\"getSortingValue(method.value)\">\n          {{method.value}}\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Collectible } from '../../../_interfaces';\nimport { CollectibleSorter } from '../collectibleSorter';\n\n@Component({\n  selector: 'app-collectible-sort',\n  templateUrl: './collectible-sort.component.html',\n  styleUrls: ['./collectible-sort.component.scss']\n})\nexport class CollectibleSortComponent implements OnInit {\n  @Input() public sorter!: CollectibleSorter;\n\n  public sortingMethods = {\n    nameAscending: \"Name ascending\",\n    nameDescending: \"Name descending\",\n    categoryAscending: \"Category ascending\",\n    categoryDescending: \"Category descending\"\n  };\n\n  private _sortingMethod: string = this.sortingMethods.nameAscending;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.setSortingMethod(this._sortingMethod);\n  }\n\n  public setSortingMethod(method: string): void {\n    if (this.sorter === undefined) return;\n    this._sortingMethod = method;\n    switch (method) {\n      case this.sortingMethods.nameAscending:\n        this.sorter.sortingMethod = this.sortByNameAscending;\n        break;\n      case this.sortingMethods.nameDescending:\n        this.sorter.sortingMethod = this.sortByNameDescending;\n        break;\n      case this.sortingMethods.categoryDescending:\n        this.sorter.sortingMethod = this.sortByCategoryDescending;\n        break;\n      default:\n        this.sorter.sortingMethod = this.sortByCategoryAscending;\n        break;\n    };\n  }\n\n  public getSortingValue(method:string):boolean {\n    return this._sortingMethod === method;\n  }\n\n  private sortByNameAscending(collectibles: Collectible[]): void {\n    collectibles.sort((collectibleA, collectibleB) => {\n      const nameA = collectibleA.name;\n      const nameB = collectibleB.name;\n      return nameA < nameB ? -1 : nameA > nameB ? 1 : 0;\n    });\n  }\n\n  private sortByNameDescending(collectibles: Collectible[]): void {\n    collectibles.sort((collectibleA, collectibleB) => {\n      const nameA = collectibleA.name;\n      const nameB = collectibleB.name;\n      return nameA > nameB ? -1 : nameA < nameB ? 1 : 0;\n    });\n  }\n\n  private sortByCategoryAscending(collectibles: Collectible[]): void {\n    const charsOnlyUpperCase = this.charsOnlyUpperCase;\n    collectibles.sort((collectibleA, collectibleB) => {\n      const categoryA = charsOnlyUpperCase(collectibleA.category);\n      const categoryB = charsOnlyUpperCase(collectibleB.category);\n      const nameA = collectibleA.name;\n      const nameB = collectibleB.name;\n      return categoryA < categoryB ? -1 : categoryA > categoryB ? 1 :\n        nameA < nameB ? -1 : nameA > nameB ? 1 : 0;\n    });\n  }\n\n  private sortByCategoryDescending(collectibles: Collectible[]): void {\n    const charsOnlyUpperCase = this.charsOnlyUpperCase;\n    collectibles.sort((collectibleA, collectibleB) => {\n      const categoryA = charsOnlyUpperCase(collectibleA.category);\n      const categoryB = charsOnlyUpperCase(collectibleB.category);\n      const nameA = collectibleA.name;\n      const nameB = collectibleB.name;\n      return categoryA > categoryB ? -1 : categoryA < categoryB ? 1 :\n        nameA < nameB ? -1 : nameA > nameB ? 1 : 0;\n    });\n  }\n\n  private charsOnlyUpperCase(value: string) : string {\n    const nonAlphaNumeric = /\\W/;\n    let match = value.toUpperCase().replace(nonAlphaNumeric, '');\n\n    return match === null ? \"\" : match;\n  }\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Collectible, collectibleCategories } from '../../_interfaces';\r\nimport { CollectibleSearchForm } from '../../_interfaces';\r\nimport { CollectibleService } from '../../_services';\r\nimport { startWith } from 'rxjs/operators';\r\nimport { Action } from '../../_tools';\r\nimport { CollectibleFilter } from './collectibleFilter';\r\nimport { CollectibleSorter } from './collectibleSorter';\r\n\r\n@Component({\r\n  selector: 'app-collectible',\r\n  templateUrl: './collectibles.component.html',\r\n  styleUrls: ['./collectibles.component.scss']\r\n})\r\nexport class CollectiblesComponent implements OnInit {\r\n  public collectibleFilter = new CollectibleFilter();\r\n  public sorter:CollectibleSorter = new CollectibleSorter();\r\n  public collectibles: Collectible[] = [];\r\n\r\n  constructor(private collectibleService: CollectibleService) { }\r\n\r\n  public get displayedCollectibles(): Collectible[] {\r\n    let result = [];\r\n    for (let n = 0; n < this.collectibles.length; n++) {\r\n      const collectible = this.collectibles[n];\r\n      if(!this.collectibleFilter.shouldShowCollectible(collectible)) continue;\r\n      result.push(collectible);\r\n    }\r\n    this.sorter.sort(result);\r\n\r\n    return result;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCollectibles();\r\n  }\r\n\r\n  public collectedValue(collectible: Collectible): string {\r\n    return !collectible.obtained ? \"Not obtained\" :\r\n      collectible.mastered ? \"Mastered\" : \"Obtained\";\r\n  }\r\n\r\n  public collectedColor(collectible: Collectible): string {\r\n    return !collectible.obtained ? \"bg-dark\" :\r\n      collectible.mastered ? \"bg-success\" : \"bg-light\";\r\n  }\r\n\r\n  public collectibleIcon(collectible: Collectible): string {\r\n    switch (collectible.category) {\r\n      case collectibleCategories.Warframe: return \"fas fa-meh-blank\";\r\n      case collectibleCategories.PrimaryWeapon: return \"fas fa-sun\";\r\n      case collectibleCategories.SecondaryWeapon: return \"fas fa-moon\";\r\n      case collectibleCategories.MeleeWeapon: return \"fas fa-sign-language\";\r\n      case collectibleCategories.Amp: return \"fas fa-disease\";\r\n      case collectibleCategories.Pet: return \"fas fa-dog\";\r\n      case collectibleCategories.RoboGun: return \"fas fa-cog\";\r\n      case collectibleCategories.Archwing: return \"fa fa-fighter-jet\";\r\n      case collectibleCategories.ArchGun: return \"fas fa-dragon\";\r\n      case collectibleCategories.ArchMelee: return \"fas fa-cut\";\r\n      default: return \"fa fa-question\";\r\n    }\r\n  }\r\n\r\n  private getCollectibles() {\r\n    this.collectibleService.getCollectibles()\r\n      .subscribe(collectibles => this.collectibles = collectibles);\r\n  }\r\n}","<!--<i class=\"fa fa-bars\"></i>-->\r\n\r\n<div class=\"d-flex flex-column flex-lg-row\">\r\n\r\n  <div class=\"col-left sticky-column\">\r\n    <app-collectible-filter [filter]='collectibleFilter'></app-collectible-filter>\r\n    <app-collectible-sort [sorter]='sorter'></app-collectible-sort>\r\n  </div>\r\n\r\n  <div class=\"col-mid\">\r\n    <h2>Collectibles</h2>\r\n    <div class=\"card-container\">\r\n      <div *ngFor='let collectible of displayedCollectibles' class=\"col-12  col-md-6 col-lg-4 col-xl-3 p-0\">\r\n        <app-collectible-card [collectible]=\"collectible\"></app-collectible-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //apiUrl: 'http://192.168.1.5:80'\n  // apiUrl: 'http://localhost:12129'\n  apiUrl: 'https://wfprogresstracker.duckdns.org/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export * from './authentication.service';\r\nexport * from './blueprint.service';\r\nexport * from './collectible.service';","import { CollectiblesComponent } from './collectibles/collectibles.component';\r\n\r\nexport * from './collectibles/collectible-card/collectible-card.component';\r\nexport * from './collectibles/collectibles.component';\r\nexport * from './wish-list/wish-list.component';\r\nexport * from './details/details.component';","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}","export interface CollectibleCategories {\r\n   Warframe: string;\r\n   PrimaryWeapon: string;\r\n   SecondaryWeapon: string;\r\n   MeleeWeapon: string;\r\n   Amp: string;\r\n   Pet: string;\r\n   RoboGun: string;\r\n   Archwing: string;\r\n   ArchGun: string;\r\n   ArchMelee: string;\r\n   [key:string]: string;\r\n}\r\n\r\nexport const collectibleCategories: CollectibleCategories = {\r\n   Warframe: \"Warframe\",\r\n   PrimaryWeapon: \"Primary Weapon\",\r\n   SecondaryWeapon: \"Secondary Weapon\",\r\n   MeleeWeapon: \"Melee Weapon\",\r\n   Amp: \"Amp Prism\",\r\n   Pet: \"Pet\",\r\n   RoboGun: \"Robo-Gun\",\r\n   Archwing: \"Archwing\",\r\n   ArchGun: \"Archgun\",\r\n   ArchMelee: \"Arch-Melee\"\r\n};\r\n\r\nexport const collectibleCategoryKeys = {\r\n   Warframe: \"Warframe\",\r\n   PrimaryWeapon: \"PrimaryWeapon\",\r\n   SecondaryWeapon: \"SecondaryWeapon\",\r\n   MeleeWeapon: \"MeleeWeapon\",\r\n   Amp: \"Amp\",\r\n   Pet: \"Pet\",\r\n   RoboGun: \"RoboGun\",\r\n   Archwing: \"Archwing\",\r\n   ArchGun: \"ArchGun\",\r\n   ArchMelee: \"ArchMelee\"\r\n};","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Warframe Progress Tracker';\n}\n","<div class=\"container site-container\">\r\n  <h1>{{title}}</h1>\r\n  <div class=\"row\">\r\n    <nav>\r\n      <a class=\"m-1\" routerLink=\"/collectibles\">Collectibles</a>\r\n      <a class=\"m-1\" routerLink=\"/wishlist\">Wishlist</a>\r\n      <a class=\"m-1\" routerLink=\"/login\">Login</a>\r\n    </nav>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>","\n<div class=\"d-flex horizontal-list\">\n   <a routerLink='/collectible/{{collectible.category}}/{{collectible.name}}'>\n      <h4 class=\"title-section btn btn-primary\">{{collectible.name}}</h4>\n   </a>\n   <span class=\"status-section d-flex\">\n      <h5>Status:{{statusText}}</h5>\n      <div class=\"status-section-buttons\">\n         <button class=\"status-section-button btn btn-secondary\" (click)=\"reduceRank()\"><span>-</span></button>\n         <button class=\"status-section-button btn btn-secondary\" (click)=\"increaseRank()\"><span>+</span></button>\n      </div>\n   </span>\n   \n   <button class=\"remove-button btn btn-danger\" (click)=\"removeFromWishlist()\">X</button>\n\n</div>\n\n<div class=\"d-flex horizontal-list\">\n   <h5>Components:</h5>\n   <span *ngFor='let component of componentBlueprints' class=\"component-card\">\n      <span class=\"card\">{{component.resultName}}</span>\n   </span>\n</div>\n\n<div class=\"d-flex horizontal-list\">\n   <h5>Construction cost:</h5>\n   <div *ngFor='let resource of getTotalCost()' class=\"component-card\">\n      <span class=\"card\">{{resource.name}}: {{resource.amount}}</span>\n   </div>\n</div>\n","import { Observable } from 'rxjs';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Collectible, Blueprint, BlueprintComponent, BlueprintCost, ResourceStack } from '../../../_interfaces';\nimport { BlueprintService, CollectibleService} from '../../../_services';\n\n@Component({\n  selector: 'app-wish-list-card',\n  templateUrl: './wish-list-card.component.html',\n  styleUrls: ['./wish-list-card.component.scss']\n})\nexport class WishListCardComponent implements OnInit {\n  @Input() public collectible!: Collectible;\n  @Input() public onDelete!: (name: string)=>void;\n  public mainBlueprint: Blueprint = { resultName: \"\", components: [] };\n  public componentBlueprints: Blueprint[] = [];\n  public resourceCosts: BlueprintCost[] = [];\n\n  constructor(\n    private blueprintService: BlueprintService,\n    private collectibleService: CollectibleService\n    ) { }\n\n  ngOnInit(): void {\n    this.loadBlueprints();\n  }\n\n  public getComponentBlueprint(resultName: string): Blueprint {\n    let result = this.componentBlueprints.find(blueprint => blueprint.resultName === resultName);\n    return result === undefined ? { resultName: \"Null\", components: [] } : result;\n  }\n\n  public getBlueprintResourceCost(name: string): BlueprintCost {\n    let cost = this.resourceCosts.find(cost => cost.name === name);\n    return cost === undefined ? { name: name, cost: [] } : cost;\n  }\n\n  public get statusText(): string {\n    return this.collectible.mastered ? \"mastered\" : \n      this.collectible.obtained ? \"obtained\" : \"not obtained\";\n  }\n\n  public increaseRank(): void {\n    if (!this.collectible.obtained) {\n      this.collectible.obtained = true;\n    } else if (!this.collectible.mastered) {\n      this.collectible.mastered = true;\n    } else return;\n    this.updateCollectible();\n  }\n\n  public reduceRank(): void {\n    if (this.collectible.mastered) {\n      this.collectible.mastered = false;\n    } else if (this.collectible.obtained) {\n      this.collectible.obtained = false;\n    } else return;\n    this.updateCollectible();\n  }\n\n  public removeFromWishlist(): void {\n    console.log(\"Removing collectible\", this.collectible.name, \" from wishlist\");\n    this.collectible.onWishlist = false;\n    this.updateCollectible();\n    if (this.onDelete !== undefined) this.onDelete(this.collectible.name);\n  }\n\n  private updateCollectible(): void {\n    this.collectibleService.updateCollectible(this.collectible)\n    .subscribe(()=>{});\n  }\n\n  private loadBlueprints() {\n    this.loadBlueprint(this.collectible.name, (blueprint: Blueprint) => {\n      if (blueprint === null || blueprint === undefined) return;\n      this.mainBlueprint = blueprint;\n      this.loadCosts(this.mainBlueprint.resultName);\n\n      blueprint.components.forEach((component: BlueprintComponent) => {\n        this.loadBlueprint(component.name, (componentBlueprint: Blueprint) => {\n          if (componentBlueprint === null || componentBlueprint === undefined) return;\n          this.componentBlueprints.push(componentBlueprint);\n          this.loadCosts(componentBlueprint.resultName);\n        });\n      });\n\n    });\n  }\n\n  private loadBlueprint(resultName: string, onResult: (bp: Blueprint) => void): void {\n    this.blueprintService.getBlueprintsWithResult(resultName)\n      .subscribe(components => {\n        let blueprint = {\n          resultName: resultName,\n          components: components.map(component => {\n            return {\n              name: component.componentName,\n              componentCount: component.componentCount\n            }\n          })\n        };\n        onResult(blueprint);\n      });\n  }\n\n  private loadCosts(resultName: string) {\n    this.blueprintService.getTotalResourceCost(resultName)\n      .subscribe(costs => {\n        let blueprintCost = {\n          name: resultName,\n          cost: costs.map(stack => {\n            return {\n              id: stack.id,\n              name: stack.name,\n              amount: stack.amount\n            }\n          })\n        };\n        this.resourceCosts.push(blueprintCost);\n      });\n  }\n\n  getTotalCost(): ResourceStack[] {\n    let result: ResourceStack[] = [];\n    for(let n = 0; n < this.resourceCosts.length; n++) {\n      for(let i = 0; i < this.resourceCosts[n].cost.length; i++) {\n        let stack = this.resourceCosts[n].cost[i];\n        let existingStack = result.findIndex(s => s.name === stack.name);\n        if (existingStack > -1) {\n          result[existingStack].amount += stack.amount;\n        }\n        else {\n          result.push({id: stack.id, name: stack.name, amount: stack.amount});\n        }\n      }\n    }\n    let creditsIndex = result.findIndex(stack => stack.name === \"Credits\");\n    if (creditsIndex > -1) {\n      let credits = result[creditsIndex];\n      result.splice(creditsIndex, 1);\n      result.splice(0, 0, credits);\n    }\n    return result;\n  }\n\n}\n","import { Collectible, obtainedState } from '../../_interfaces';\r\nimport { DisplayedCategories } from './displayedCategories';\r\n\r\nexport interface CollectibleFilterState {\r\n  filterText: string;\r\n  allowedObtainedState: string;\r\n  includedCategories: DisplayedCategories;\r\n}\r\n\r\nexport class CollectibleFilter {\r\n  private _filter: CollectibleFilterState = {\r\n    filterText: \"\", allowedObtainedState: obtainedState.NotObtained, includedCategories: {}\r\n  }\r\n\r\n  public set filter(filter: CollectibleFilterState) { this._filter = filter }\r\n\r\n  constructor() { }\r\n\r\n  public shouldShowCollectible(collectible: Collectible): boolean {\r\n    const filter = this._filter;\r\n    return this.shouldShowCategory(collectible.category, filter.includedCategories)\r\n      && this.passesObtainedFilter(collectible, filter.allowedObtainedState)\r\n      && this.containsString(collectible, filter.filterText)\r\n\r\n  }\r\n\r\n  private shouldShowCategory(category: string, shownCategories: DisplayedCategories): boolean {\r\n    return shownCategories[category];\r\n  }\r\n\r\n  private passesObtainedFilter(collectible: Collectible, allowedState: string): boolean {\r\n    return allowedState === obtainedState.Any ||\r\n      collectible.obtained && !collectible.mastered && allowedState === obtainedState.Obtained ||\r\n      !collectible.obtained && allowedState === obtainedState.NotObtained ||\r\n      collectible.mastered && allowedState === obtainedState.Mastered;\r\n  }\r\n\r\n  private containsString(collectible: Collectible, value: string): boolean {\r\n    value = value.trim();\r\n    if (value.length == 0) return true;\r\n    let collectibleName = collectible.name.toLowerCase();\r\n    let collectibleCategory = collectible.category.toLowerCase();\r\n    let filter = value.toLowerCase().trim();\r\n    const regularExpression = /,/\r\n    let targetValues = filter.split(regularExpression);\r\n    for (let n = 0; n < targetValues.length; n++) {\r\n      targetValues[n] = targetValues[n].trim();\r\n      let mustIncludes = targetValues[n].split(' ');\r\n      let containsAll = true;\r\n      for (let i = 0; i < mustIncludes.length; i++) {\r\n        if (!collectibleName.includes(mustIncludes[i])\r\n          && !collectibleCategory.includes(mustIncludes[i])) {\r\n          containsAll = false;\r\n          break;\r\n        }\r\n      }\r\n      if (containsAll) return true;\r\n    }\r\n    return false;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MessagesComponent } from './_components/messages/messages.component';\r\nimport { LoginComponent } from './_components/login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { CollectiblesComponent } from './_components';\r\nimport { CollectibleCardComponent } from './_components/collectibles/collectible-card/collectible-card.component';\r\nimport { WishListComponent } from './_components/wish-list/wish-list.component';\r\nimport { ItemCostCardComponent } from './_components/wish-list/item-cost-card/item-cost-card.component';\r\nimport { DetailsComponent } from './_components/details/details.component';\r\nimport { CollectibleFilterComponent } from './_components/collectibles/collectible-filter/collectible-filter.component';\r\nimport { CollectibleSortComponent } from './_components/collectibles/collectible-sort/collectible-sort.component';\nimport { WishListCardComponent } from './_components/wish-list/wish-list-card/wish-list-card.component';\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      MessagesComponent,\r\n      LoginComponent,\r\n      RegisterComponent,\r\n      CollectiblesComponent,\r\n      CollectibleCardComponent,\r\n      WishListComponent,\r\n      ItemCostCardComponent,\r\n      DetailsComponent,\r\n      CollectibleFilterComponent,\r\n      CollectibleSortComponent,\r\n      WishListCardComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      AppRoutingModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      HttpClientModule\r\n      // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\r\n      // and returns simulated server responses.\r\n      // Remove it when a real server is ready to receive requests.\r\n      /*\r\n      HttpClientInMemoryWebApiModule.forRoot(\r\n         InMemoryDataService, { dataEncapsulation: false }\r\n      )*/\r\n   ],\r\n   providers: [],\r\n   bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\n<h2>Messages</h2>\n<button class=\"clear\"\n(click)=\"messageService.clear()\">Clear messages</button>\n<div *ngIf=\"messageService.messages.length\">\n        <div *ngFor='let message of messageService.messages'> {{message}} </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export interface Collectible {\r\n   id: number,\r\n   name: string,\r\n   category: string,\r\n   mastered: boolean,\r\n   obtained: boolean,\r\n   onWishlist: boolean\r\n};","import {Collectible} from '../../_interfaces';\r\n\r\nexport class CollectibleSorter {\r\n   \r\n   public sortingMethod!: (collectibles:Collectible[])=>void;\r\n   \r\n   public sort(collectibles: Collectible[]):void {\r\n      if (this.sortingMethod === undefined) return;\r\n      this.sortingMethod(collectibles);\r\n   }\r\n\r\n   private charsOnlyUpperCase(value: string) : string {\r\n      const nonAlphaNumeric = /\\W/;\r\n      let match = value.toUpperCase().replace(nonAlphaNumeric, '');\r\n  \r\n      return match === null ? \"\" : match;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { MessageService } from '../message.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { Collectible, CollectibleSearchForm } from '../_interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CollectibleService {\r\n  private apiUrl = environment.apiUrl;\r\n  private collectibleApiUrlGet = environment.apiUrl + \"/collectible/get\";\r\n  private collectibleApiGetWithName = environment.apiUrl + \"/collectible/getwithname\";\r\n  private collectibleApiSet = environment.apiUrl + \"/collectible/set\";\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService) { }\r\n    private _defaultSearchForm: CollectibleSearchForm = {\r\n      includeFrames: true,\r\n      includePrimaryWeapons: true,\r\n      includeSecondaryWeapons: true,\r\n      includeMeleeWeapons: true,\r\n      includePets: true,\r\n      includeRoboWeapons: true,\r\n      includeOperatorAmps: true,\r\n      includeArchwings: true,\r\n      includeArchGuns: true,\r\n      includeArchMeleeWeapons: true,\r\n\r\n      onlyOnWishlist: false,\r\n      includeOwned: true,\r\n      includeMastered: true,\r\n      searchText: \"\" \r\n    };\r\n\r\n  getCollectibles(searchForm: CollectibleSearchForm = this._defaultSearchForm\r\n    ): Observable<Collectible[]> {\r\n    return this.http.put<Collectible[]>(this.collectibleApiUrlGet, searchForm, { withCredentials: true })\r\n      .pipe(catchError(this.handleError<Collectible[]>('getCollectibles,', [])));\r\n  }\r\n\r\n  getCollectible(category: string, name: string): Observable<Collectible> {\r\n    let info = { category: category, name: name };\r\n    return this.http.put<Collectible>(\r\n      this.collectibleApiGetWithName,\r\n      info, { withCredentials: true });\r\n  }\r\n\r\n  updateCollectible(collectible: Collectible): Observable<Collectible> {\r\n    return this.http.put<Collectible>(\r\n      this.collectibleApiSet, collectible, { withCredentials: true })\r\n      .pipe(tap(() =>\r\n        this.log(`updated userCollectible:${collectible.name}`)),\r\n        catchError(this.handleError<Collectible>('upgradeCollectibleRank')));\r\n  }\r\n\r\n  addToWishlist(collectible: Collectible): Observable<Collectible> {\r\n    throw \"add to wish list not implemented\";\r\n  }\r\n\r\n  removeFromWishlist(collectible: Collectible): Observable<Collectible> {\r\n    throw \"remove from wish list not implemented\";\r\n  }\r\n\r\n  \r\n  private log(message: string) {\r\n    this.messageService.add(`FrameService: ${message}`);\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      console.error(error); // log to console instead\r\n      this.log(`${operation} failed: ${error.message}`);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","export * from './register.component';","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Collectible, collectibleCategories } from '../../../_interfaces';\r\nimport { CollectibleService } from '../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-collectible-card',\r\n  templateUrl: './collectible-card.component.html',\r\n  styleUrls: ['./collectible-card.component.scss']\r\n})\r\nexport class CollectibleCardComponent implements OnInit {\r\n  @Input() public collectible!: Collectible;\r\n\r\n  constructor(private collectibleService: CollectibleService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  public collectedColor(collectible: Collectible): string {\r\n    return !collectible.obtained ? \"bg-dark\" :\r\n      collectible.mastered ? \"bg-warning\" : \"bg-light\";\r\n  }\r\n\r\n  public collectibleIcon(collectible: Collectible): string {\r\n    switch (collectible.category) {\r\n      case collectibleCategories.Warframe: return \"fas fa-meh-blank\";\r\n      case collectibleCategories.PrimaryWeapon: return \"fas fa-sun\";\r\n      case collectibleCategories.SecondaryWeapon: return \"fas fa-moon\";\r\n      case collectibleCategories.MeleeWeapon: return \"fas fa-sign-language\";\r\n      case collectibleCategories.Amp: return \"fas fa-disease\";\r\n      case collectibleCategories.Pet: return \"fas fa-dog\";\r\n      case collectibleCategories.RoboGun: return \"fas fa-cog\";\r\n      case collectibleCategories.Archwing: return \"fa fa-fighter-jet\";\r\n      case collectibleCategories.ArchGun: return \"fas fa-dragon\";\r\n      case collectibleCategories.ArchMelee: return \"fas fa-cut\";\r\n      default: return \"fa fa-question\";\r\n    }\r\n  }\r\n\r\n  public increaseRank(): void {\r\n    if (!this.collectible.obtained) {\r\n      this.collectible.obtained = true;\r\n    } else if (!this.collectible.mastered) {\r\n      this.collectible.mastered = true;\r\n    } else return;\r\n    this.updateCollectible();\r\n  }\r\n\r\n  public reduceRank(): void {\r\n    // console.log(\"Reducing rank for collectible\", this.collectible.name);\r\n  }\r\n\r\n  public addToWishlist(): void {\r\n    this.collectible.onWishlist = true;\r\n    this.updateCollectible();\r\n  }\r\n\r\n  public removeFromWishlist(): void {\r\n    this.collectible.onWishlist = false;\r\n    this.updateCollectible();\r\n  }\r\n\r\n  public toggleWishList(): void {\r\n    if (this.collectible.onWishlist) this.removeFromWishlist();\r\n    else this.addToWishlist();\r\n  }\r\n\r\n  public getWishListStyle(): string {\r\n    return this.collectible.onWishlist ? \"status-icon\" : \"hide\";\r\n  }\r\n\r\n  public getRankIcon(): string {\r\n    return this.collectible.mastered ? \"fas fa-crown\" :\r\n      this.collectible.obtained ? \"fas fa-check\" : \"hidden\";\r\n  }\r\n\r\n  public getRankStyle(): string {\r\n    return this.collectible.obtained ? \"status-icon\" : \"hide\";\r\n  }\r\n\r\n  private updateCollectible() {\r\n    this.collectibleService.updateCollectible(this.collectible)\r\n    .subscribe(()=>{});\r\n  }\r\n}\r\n","<div class='m-1 card collectible-card {{collectedColor(collectible)}}'>\r\n   <div class=\"card-body m-1 p-0\">\r\n      <p class=\"font-weight-bold text-light card-title noselect nopointer\">{{collectible.name}}</p>\r\n      <div class=\"bg-secondary component-container\">\r\n\r\n            <button class=\"card-part part-left btn btn-secondary\">\r\n               <a routerLink='/collectible/{{collectible.category}}/{{collectible.name}}'>\r\n                  <i class=\"fas fa-eye button-icon\">\r\n                     <span class=\"tooltip-text\">Go to details page</span>\r\n                  </i>\r\n               </a>\r\n            </button>\r\n\r\n            <button class=\"card-part part-center btn btn-secondary\" (click)=\"toggleWishList()\">\r\n               <i class=\"fa fa-bars button-icon\">\r\n                  <span class=\"tooltip-text\">Add to wishlist</span>\r\n               </i>\r\n            </button>\r\n\r\n            <button class=\"card-part part-right btn btn-secondary\" (click)=\"increaseRank()\">\r\n               <i class=\"fas fa-check button-icon\">\r\n                  <span class=\"tooltip-text text-dark\">Increase rank</span>\r\n               </i>\r\n            </button>\r\n         </div>\r\n\r\n      <i class=\"{{collectibleIcon(collectible)}} category-icon noselect nopointer\"></i>\r\n      <div class=\"status-icon-container m-0 p-0 nopointer\">\r\n         <i class=\"{{getWishListStyle()}} fa fa-bars\"></i>\r\n         <i class=\"{{getRankStyle()}} {{getRankIcon()}}\"></i>\r\n      </div>\r\n\r\n   </div>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, pipe } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n   public currentUser: any;\n   private authenticateUrl = environment.apiUrl + \"/user\";\n   private currentUserSubject: any;\n   private httpOptions:object = {\n      headers: new HttpHeaders({\n         'Content-Type': 'application/json',\n         Authorization: ''\n      })\n   };\n\n   constructor(private http: HttpClient) {\n      let storedCurrentUser = localStorage.getItem('currentUser');\n      if (storedCurrentUser != null) {\n         let currentUser = new BehaviorSubject<any>(JSON.parse(storedCurrentUser));\n         if (currentUser != null) this.currentUserSubject = currentUser;\n         this.currentUser = this.currentUserSubject.asObservable();\n      }\n   }\n\n   public login(userName: string, password: string): void {\n      var url = environment.apiUrl + \"/user/login\";\n      this.http.post(url, { userName, password }, {withCredentials: true} )\n      .subscribe(response => {});\n   }\n\n   public register(userName: string, password: string): Observable<any> {\n      console.log(\"Registering\", userName);\n      var url = environment.apiUrl + \"/user/register\";\n      return this.http.post<string>(url, {userName, password}, {withCredentials: true})\n      .pipe(map(user => {\n         console.log(user);\n         localStorage.setItem('currentUser', JSON.stringify(user));\n         this.currentUserSubject.next(user);\n         return user;\n      }));\n   }\n}\n","<div>\r\n   <h1>Wish list</h1>\r\n   <ul class=\"list-group\">\r\n      <li *ngFor='let collectible of collectibles' class=\"list-group-item wish-list-item\">\r\n         <app-wish-list-card \r\n            [collectible]=\"collectible\"\r\n            [onDelete]=\"removeItem\"\r\n            ></app-wish-list-card>\r\n         <!--\r\n         <app-item-cost-card \r\n         [blueprint]=\"getBlueprint(collectible.name)\" \r\n         [collectible]=\"collectible\"\r\n         [cost]=\"getBlueprintResourceCost(collectible.name)\" \r\n         [onDelete]=\"removeItem\"></app-item-cost-card>\r\n         -->\r\n      </li>\r\n   </ul>\r\n</div>\r\n<!--\r\n<div class=\"container\" *ngIf='hasResourceCost()'>\r\n   <h2>Total forging costs:</h2>\r\n   <ul class=\"list-group\">\r\n      <li *ngFor = 'let cost of getTotalCost()' class=\"list-group-item\">\r\n         {{cost.name}} ({{cost.amount}})\r\n      </li>\r\n   </ul>\r\n</div>\r\n\r\n<div class=\"container\">\r\n   <ul class=\"list-group\">\r\n      <li *ngFor='let collectible of collectibles' class=\"list-group-item wish-list-item\">\r\n         <app-item-cost-card \r\n            [blueprint]=\"getBlueprint(collectible.name)\"\r\n            [collectible]=\"collectible\"\r\n            [cost]=\"getBlueprintResourceCost(collectible.name)\"\r\n            [onDelete]=\"removeItem\"\r\n            ></app-item-cost-card>\r\n      </li>\r\n   </ul>\r\n</div>\r\n-->","import { Component, OnInit } from '@angular/core';\r\nimport { CollectibleService } from '../../_services';\r\nimport { Collectible, CollectibleSearchForm } from '../../_interfaces';\r\nimport { BlueprintService, } from 'src/app/_services';\r\nimport { Blueprint, BlueprintComponent, ResourceStack, BlueprintCost } from '../../_interfaces/blueprint';\r\n\r\n@Component({\r\n  selector: 'app-wish-list',\r\n  templateUrl: './wish-list.component.html',\r\n  styleUrls: ['./wish-list.component.scss']\r\n})\r\nexport class WishListComponent implements OnInit {\r\n  public collectibles: Collectible[] = [];\r\n  public blueprints: Blueprint[] = [];\r\n  public resourceCosts: BlueprintCost[] = [];\r\n\r\n  private _searchForm: CollectibleSearchForm = {\r\n    includeFrames: true,\r\n    includePrimaryWeapons: true,\r\n    includeSecondaryWeapons: true,\r\n    includeMeleeWeapons: true,\r\n    includePets: true,\r\n    includeRoboWeapons: true,\r\n    includeOperatorAmps: true,\r\n    includeArchwings: true,\r\n    includeArchGuns: true,\r\n    includeArchMeleeWeapons: true,\r\n\r\n    onlyOnWishlist: true,\r\n    includeOwned: true,\r\n    includeMastered: true,\r\n    searchText: \"\"\r\n  };\r\n  constructor(\r\n    private collectibleService: CollectibleService,\r\n    private blueprintService: BlueprintService\r\n  ) { \r\n    this.removeItem = this.removeItem.bind(this);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCollectibles();\r\n  }\r\n\r\n  getBlueprintComponents(name: string): BlueprintComponent[] {\r\n    let blueprint = this.blueprints.find(blueprint => blueprint.resultName === name);\r\n    return blueprint === undefined ? [] : blueprint.components;\r\n  }\r\n\r\n  getBlueprint(resultName: string): Blueprint {\r\n    let result = this.blueprints.find(blueprint => blueprint.resultName === resultName);\r\n    return result === undefined ? {resultName: \"Null\", components: []} : result;\r\n  }\r\n\r\n  getBlueprintResourceCost(name: string): BlueprintCost {\r\n    let cost = this.resourceCosts.find(cost => cost.name === name);\r\n    return cost === undefined ? {name: name, cost: []} : cost;\r\n  }\r\n\r\n  removeItem(name: string): void {\r\n    let index = this.collectibles.findIndex(collectible => collectible.name === name);\r\n    if (index > -1) {\r\n      this.collectibles.splice(index, 1);\r\n    }\r\n    index = this.resourceCosts.findIndex(stack => stack.name === name);\r\n    if(index > -1) {\r\n      this.resourceCosts.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  getTotalCost(): ResourceStack[] {\r\n    let result: ResourceStack[] = [];\r\n    for(let n = 0; n < this.resourceCosts.length; n++) {\r\n      for(let i = 0; i < this.resourceCosts[n].cost.length; i++) {\r\n        let stack = this.resourceCosts[n].cost[i];\r\n        let existingStack = result.findIndex(s => s.name === stack.name);\r\n        if (existingStack > -1) {\r\n          result[existingStack].amount += stack.amount;\r\n        }\r\n        else {\r\n          result.push({id: stack.id, name: stack.name, amount: stack.amount});\r\n        }\r\n      }\r\n    }\r\n    let creditsIndex = result.findIndex(stack => stack.name === \"Credits\");\r\n    \r\n    if (creditsIndex > -1) {\r\n      let credits = result[creditsIndex];\r\n      result.splice(creditsIndex, 1);\r\n      result.splice(0, 0, credits);\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  hasResourceCost(): boolean {\r\n    return this.getTotalCost().length > 0;\r\n  }\r\n\r\n  private getCollectibles() {\r\n    this.collectibleService.getCollectibles(this._searchForm)\r\n      .subscribe(collectibles => {\r\n        this.collectibles = collectibles;\r\n        this.getBlueprints();\r\n        this.getCosts();\r\n      });\r\n  }\r\n\r\n  private getBlueprints() {\r\n    this.blueprints = [];\r\n    this.collectibles.forEach(collectible => {\r\n      this.blueprintService.getBlueprintsWithResult(collectible.name)\r\n        .subscribe(components => {\r\n          let blueprint = {\r\n            resultName: collectible.name,\r\n            components: components.map(component => {\r\n              return {\r\n                name: component.componentName,\r\n                componentCount: component.componentCount\r\n              }\r\n            })\r\n          };\r\n          this.blueprints.push(blueprint);\r\n        });\r\n    });\r\n  }\r\n\r\n  private getCosts() {\r\n    this.resourceCosts = [];\r\n    this.collectibles.forEach(collectible => {\r\n      this.blueprintService.getTotalResourceCost(collectible.name)\r\n        .subscribe(costs => {\r\n          let blueprintCost = {\r\n            name: collectible.name,\r\n            cost: costs.map(stack => {\r\n              return {\r\n                id: stack.id,\r\n                name: stack.name,\r\n                amount: stack.amount\r\n              }\r\n            })\r\n          };\r\n          this.resourceCosts.push(blueprintCost);\r\n        });\r\n    });\r\n  }\r\n}\r\n","export * from './collectible';\r\nexport * from './collectibleCategories';\r\nexport * from './collectibleSearchForm';\r\nexport * from './obtainedState';\r\nexport * from './blueprint';","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './_components/login';\r\nimport { RegisterComponent } from './register';\r\nimport { CollectiblesComponent, WishListComponent, DetailsComponent } from './_components';\r\n\r\nconst routes: Routes = [\r\n  { path: 'collectibles', component: CollectiblesComponent },\r\n  { path: '', redirectTo: '/collectibles', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'wishlist', component: WishListComponent },\r\n  { path: 'collectible/:category/:name', component: DetailsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","<div class=\"d-flex info-box m-3\" *ngIf=\"initialisedCollectible\">\r\n   <div>\r\n      <h1>{{collectible.name}}</h1>\r\n      <h2>{{collectible.category}}</h2>\r\n   </div>\r\n   <div class=\"card p-2\">\r\n      <h5 class=\"card-title\">Wishlist: {{wishlistText}}</h5>\r\n      <button class=\"btn btn-warning\" (click)=\"toggleWishlist()\">Toggle</button>\r\n   </div>\r\n   \r\n   <div class=\"card p-2\">\r\n      <h5 class=\"card-title\">Status: {{statusText}}</h5>\r\n      <div class=\"d-flex\">\r\n         <button class=\"btn btn-primary large-text m-1\" (click)=\"reduceRank()\">-</button>\r\n         <button class=\"btn btn-primary large-text m-1\" (click)=\"increaseRank()\">+</button>\r\n      </div>\r\n   </div>\r\n\r\n   <div class=\"card p-2\">\r\n      <h5>Build cost</h5>\r\n         <div *ngFor=\"let resource of cost\">\r\n            {{resource.name}} ({{resource.amount}})\r\n         </div>\r\n   </div>\r\n</div>\r\n\r\n<div class=\"card p-2 m-3\">\r\n   <h2 class=\"card-title\">Components</h2>\r\n   <ul class=\"list-group list-group-flush\">\r\n      <div class=\"list-group-item\" *ngFor=\"let component of blueprint\">\r\n         <span [innerHTML]=\"component.detailsHtml\"></span>\r\n         <!--\r\n         <h4>{{component.resource.componentName}}</h4>\r\n         <h5>Build cost</h5>\r\n         <div *ngFor=\"let resource of component.cost\">\r\n            {{resource.name}} ({{resource.amount}})\r\n         </div>\r\n         <h5 *ngIf=\"component.source.length > 0\">Location</h5>\r\n         <div *ngFor=\"let source of component.source\">\r\n            {{source.sourceName}} ({{source.sourceType}}, {{source.value}})\r\n         </div>\r\n         -->\r\n      </div>\r\n   </ul>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Collectible } from '../../_interfaces';\r\nimport { CollectibleService } from '../../_services';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { BlueprintService, IBlueprintResource, IResource, ISource } from 'src/app/_services';\r\n\r\ninterface BlueprintComponent {\r\n  source: ISource[];\r\n  resource: IBlueprintResource;\r\n  cost: IResource[];\r\n  category: string;\r\n  detailsHtml: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.scss']\r\n})\r\nexport class DetailsComponent implements OnInit {\r\n  public collectible!: Collectible;\r\n  public blueprint: BlueprintComponent[] = [];\r\n  public cost: IResource[] = [];\r\n  public initialisedCollectible = false;\r\n\r\n  private get name(): string { return String(this.route.snapshot.paramMap.get('name')); }\r\n  private get category(): string { return String(this.route.snapshot.paramMap.get('category')); }\r\n  \r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private collectibleService: CollectibleService,\r\n    private blueprintService: BlueprintService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCollectible();\r\n    this.getComponents();\r\n    this.getCost();\r\n  }\r\n\r\n  public get statusText(): string {\r\n    if (this.collectible == null) return \"\";\r\n    return this.collectible.mastered ? \"Mastered\" :\r\n      this.collectible.obtained ? \"Obtained\" : \"Not obtained\";\r\n  }\r\n\r\n  public increaseRank(): void {\r\n    if (!this.collectible.obtained) {\r\n      this.collectible.obtained = true;\r\n    } else if (!this.collectible.mastered) {\r\n      this.collectible.mastered = true;\r\n    } else return;\r\n    this.updateCollectible();\r\n  }\r\n\r\n  public reduceRank(): void {\r\n    if (this.collectible.mastered) {\r\n      this.collectible.mastered = false;\r\n    } else if (this.collectible.obtained) {\r\n      this.collectible.obtained = false;\r\n    } else return;\r\n    this.updateCollectible();\r\n  }\r\n\r\n  public addToWishlist(): void {\r\n    this.collectible.onWishlist = true;\r\n    this.updateCollectible();\r\n  }\r\n\r\n  public removeFromWishlist(): void {\r\n    this.collectible.onWishlist = false;\r\n    this.updateCollectible();\r\n  }\r\n\r\n  public toggleWishlist():void {\r\n    let onWishlist = this.collectible.onWishlist;\r\n    if (onWishlist) this.removeFromWishlist();\r\n    else this.addToWishlist();\r\n  }\r\n\r\n  public get wishlistText(): string {\r\n    return this.collectible.onWishlist ? \"Yes\" : \"No\";\r\n  }\r\n\r\n  private getCollectible(): void {\r\n    const category = this.category;\r\n    const name = this.name;\r\n\r\n    this.collectibleService.getCollectible(category, name)\r\n      .subscribe(collectible => {\r\n        this.collectible = collectible;\r\n        this.initialisedCollectible = true;\r\n      });\r\n  }\r\n\r\n  private getComponents(): void {\r\n    const name = this.name;\r\n    let me = this;\r\n    this.blueprintService.getBlueprintsWithResult(name)\r\n      .subscribe(blueprint => {\r\n        this.blueprint = blueprint\r\n        .map<BlueprintComponent>(component => {\r\n          return { \r\n            resource: component, \r\n            cost: [], \r\n            source: [], \r\n            category: component.componentCategory,\r\n            detailsHtml: \"\"\r\n          };\r\n        });\r\n        this.blueprint.forEach(component => {\r\n          this.getCostOfComponent(component);\r\n          this.getComponentSource(component);\r\n        });\r\n      });\r\n  }\r\n\r\n  private getCost(): void {\r\n    const name = this.name;\r\n    this.blueprintService.getTotalResourceCost(name)\r\n      .subscribe(cost => this.summarizeCost(cost));\r\n  }\r\n\r\n  private summarizeCost(cost: IResource[]): void {\r\n    let result: IResource[] = [];\r\n    for(let n = 0; n < cost.length; n++) {\r\n      let resource = cost[n];\r\n      let matchFound = false;\r\n      result.forEach(element => {\r\n        if (element.id === resource.id) {\r\n          element.amount += resource.amount;\r\n          matchFound = true;\r\n        }\r\n      });\r\n      if (matchFound) continue;\r\n      result.push({id: cost[n].id, name: cost[n].name, amount: cost[n].amount});\r\n    }\r\n    this.cost = result;\r\n  }\r\n\r\n  private getCostOfComponent(component: BlueprintComponent):void {\r\n    this.blueprintService\r\n      .getComponents(component.resource.componentName)\r\n      .subscribe(cost => {\r\n        component.cost = cost;\r\n        component.detailsHtml = this.getDetailsHtml(component);\r\n      });\r\n  }\r\n\r\n  private getComponentSource(component: BlueprintComponent) {\r\n    this.blueprintService\r\n      .getSource(component.resource.componentName + \" Blueprint\")\r\n      .subscribe(source => {\r\n        component.source = source;\r\n        component.detailsHtml = this.getDetailsHtml(component);\r\n      });\r\n  }\r\n\r\n  private updateCollectible(): void {\r\n    this.collectibleService.updateCollectible(this.collectible)\r\n    .subscribe(()=>{});\r\n  }\r\n\r\n  public getDetailsHtml(component: BlueprintComponent): string {\r\n    let title = component.resource.componentName;\r\n    let result = \"<h4>\" + title;\r\n\r\n    if (component.category == \"Resource\")  {\r\n      let amount = component.resource.componentCount;\r\n      return result + ` (${amount})` + \"</h4>\"\r\n    }\r\n\r\n    result += \"</h4>\";\r\n    \r\n    return result + this.getBuildCostHtml(component) + this.getSourceHtml(component);\r\n  }\r\n\r\n  private getBuildCostHtml(component: BlueprintComponent): string {\r\n    if (component.cost.length == 0) return \"\";\r\n    let result = \"<div> <h5>Build Cost</h5>\";\r\n\r\n    let cost = component.cost.map<string>(resource => {\r\n      let name = resource.name;\r\n      let amount = resource.amount;\r\n      return `${name} (${amount})`;\r\n    });\r\n\r\n    cost.forEach(costString => {\r\n      result += `<div>${costString}</div>`;\r\n    });\r\n    \r\n    return result + \"</div>\";\r\n  }\r\n\r\n  private getSourceHtml(component: BlueprintComponent): string {\r\n    let sources = component.source.map(source => {\r\n      return source.sourceName + \"(\" + source.sourceType + \", \" + source.value + \")\";\r\n    });\r\n    if (sources.length == 0) return \"\";\r\n    let title = sources.length > 1 ? \"Sources\" : \"Sources\";\r\n    let result = `<div> <h5>${title}</h5>`;\r\n    sources.forEach(sourceHtml => {\r\n      result += \"<div>\" + sourceHtml + \"</div>\";\r\n    });\r\n    return result + \"</div>\";\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}